"use strict";var _interopRequireDefault=require("@babel/runtime-corejs3/helpers/interopRequireDefault");var _now=_interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/date/now"));var _keys=_interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/object/keys"));var _forEach=_interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/for-each"));let customUtils=require("./customUtils"),model=require("./model"),asyncWaterfall=require('neo-async/waterfall'),asyncEachSeries=require('neo-async/eachSeries'),Executor=require("./executor"),Index=require("./indexes"),util=require('util'),_=require('underscore'),Persistence=require("./persistence"),Cursor=require("./cursor");function Datastore(options){let filename;if(typeof options==='string'){filename=options;this.inMemoryOnly=false;}else{options=options||{};filename=options.filename;this.inMemoryOnly=options.inMemoryOnly||false;this.autoload=options.autoload||false;this.timestampData=options.timestampData||false;}if(!filename||typeof filename!=='string'||filename.length===0){this.filename=null;this.inMemoryOnly=true;}else{this.filename=filename;}this.compareStrings=options.compareStrings;this.persistence=new Persistence({db:this,nodeWebkitAppName:options.nodeWebkitAppName,afterSerialization:options.afterSerialization,beforeDeserialization:options.beforeDeserialization,corruptAlertThreshold:options.corruptAlertThreshold});this.executor=new Executor();if(this.inMemoryOnly){this.executor.ready=true;}this.indexes={};this.indexes.id=new Index({fieldName:'id',unique:true});this.ttlIndexes={};if(this.autoload){this.loadDatabase(options.onload||function(err){if(err){throw err;}});}}util.inherits(Datastore,require('events').EventEmitter);Datastore.prototype.loadDatabase=function(){this.executor.push({this:this.persistence,fn:this.persistence.loadDatabase,arguments:arguments},true);};Datastore.prototype.getAllData=function(){return this.indexes.id.getAll();};Datastore.prototype.resetIndexes=function(newData){var _context;let self=this;(0,_forEach.default)(_context=(0,_keys.default)(this.indexes)).call(_context,function(i){self.indexes[i].reset(newData);});};Datastore.prototype.ensureIndex=function(options,cb){let err,callback=cb||function(){};options=options||{};if(!options.fieldName){err=new Error("Cannot create an index without a fieldName");err.missingFieldName=true;return callback(err);}if(this.indexes[options.fieldName]){return callback(null);}this.indexes[options.fieldName]=new Index(options);if(options.expireAfterSeconds!==undefined){this.ttlIndexes[options.fieldName]=options.expireAfterSeconds;}try{this.indexes[options.fieldName].insert(this.getAllData());}catch(e){delete this.indexes[options.fieldName];return callback(e);}this.persistence.persistNewState([{$$indexCreated:options}],function(err){if(err){return callback(err);}return callback(null);});};Datastore.prototype.removeIndex=function(fieldName,cb){let callback=cb||function(){};delete this.indexes[fieldName];this.persistence.persistNewState([{$$indexRemoved:fieldName}],function(err){if(err){return callback(err);}return callback(null);});};Datastore.prototype.addToIndexes=function(doc){let i,failingIndex,error,keys=(0,_keys.default)(this.indexes);for(i=0;i<keys.length;i+=1){try{this.indexes[keys[i]].insert(doc);}catch(e){failingIndex=i;error=e;break;}}if(error){for(i=0;i<failingIndex;i+=1){this.indexes[keys[i]].remove(doc);}throw error;}};Datastore.prototype.removeFromIndexes=function(doc){var _context2;let self=this;(0,_forEach.default)(_context2=(0,_keys.default)(this.indexes)).call(_context2,function(i){self.indexes[i].remove(doc);});};Datastore.prototype.updateIndexes=function(oldDoc,newDoc){let i,failingIndex,error,keys=(0,_keys.default)(this.indexes);for(i=0;i<keys.length;i+=1){try{this.indexes[keys[i]].update(oldDoc,newDoc);}catch(e){failingIndex=i;error=e;break;}}if(error){for(i=0;i<failingIndex;i+=1){this.indexes[keys[i]].revertUpdate(oldDoc,newDoc);}throw error;}};Datastore.prototype.getCandidates=function(query,dontExpireStaleDocs,callback){let indexNames=(0,_keys.default)(this.indexes),self=this,usableQueryKeys;if(typeof dontExpireStaleDocs==='function'){callback=dontExpireStaleDocs;dontExpireStaleDocs=false;}asyncWaterfall([function(cb){var _context3,_context4,_context5;usableQueryKeys=[];(0,_forEach.default)(_context3=(0,_keys.default)(query)).call(_context3,function(k){if(typeof query[k]==='string'||typeof query[k]==='number'||typeof query[k]==='boolean'||util.isDate(query[k])||query[k]===null){usableQueryKeys.push(k);}});usableQueryKeys=_.intersection(usableQueryKeys,indexNames);if(usableQueryKeys.length>0){return cb(null,self.indexes[usableQueryKeys[0]].getMatching(query[usableQueryKeys[0]]));}usableQueryKeys=[];(0,_forEach.default)(_context4=(0,_keys.default)(query)).call(_context4,function(k){if(query[k]&&query[k].hasOwnProperty('$in')){usableQueryKeys.push(k);}});usableQueryKeys=_.intersection(usableQueryKeys,indexNames);if(usableQueryKeys.length>0){return cb(null,self.indexes[usableQueryKeys[0]].getMatching(query[usableQueryKeys[0]].$in));}usableQueryKeys=[];(0,_forEach.default)(_context5=(0,_keys.default)(query)).call(_context5,function(k){if(query[k]&&(query[k].hasOwnProperty('$lt')||query[k].hasOwnProperty('$lte')||query[k].hasOwnProperty('$gt')||query[k].hasOwnProperty('$gte'))){usableQueryKeys.push(k);}});usableQueryKeys=_.intersection(usableQueryKeys,indexNames);if(usableQueryKeys.length>0){return cb(null,self.indexes[usableQueryKeys[0]].getBetweenBounds(query[usableQueryKeys[0]]));}return cb(null,self.getAllData());},function(docs){if(dontExpireStaleDocs){return callback(null,docs);}let expiredDocsIds=[],validDocs=[],ttlIndexesFieldNames=(0,_keys.default)(self.ttlIndexes);(0,_forEach.default)(docs).call(docs,function(doc){let valid=true;(0,_forEach.default)(ttlIndexesFieldNames).call(ttlIndexesFieldNames,function(i){if(doc[i]!==undefined&&util.isDate(doc[i])&&(0,_now.default)()>doc[i].getTime()+self.ttlIndexes[i]*1000){valid=false;}});if(valid){validDocs.push(doc);}else{expiredDocsIds.push(doc.id);}});asyncEachSeries(expiredDocsIds,function(id,cb){self._remove({id:id},{},function(err){if(err){return callback(err);}return cb();});},function(err){return callback(null,validDocs);});}]);};Datastore.prototype._insert=function(newDoc,cb){let callback=cb||function(){},preparedDoc;try{preparedDoc=this.prepareDocumentForInsertion(newDoc);this._insertInCache(preparedDoc);}catch(e){return callback(e);}this.persistence.persistNewState(util.isArray(preparedDoc)?preparedDoc:[preparedDoc],function(err){if(err){return callback(err);}return callback(null,model.deepCopy(preparedDoc));});};Datastore.prototype.createNewId=function(){let tentativeId=customUtils.uid(16);if(this.indexes.id.getMatching(tentativeId).length>0){tentativeId=this.createNewId();}return tentativeId;};Datastore.prototype.prepareDocumentForInsertion=function(newDoc){let preparedDoc,self=this;if(util.isArray(newDoc)){preparedDoc=[];(0,_forEach.default)(newDoc).call(newDoc,function(doc){preparedDoc.push(self.prepareDocumentForInsertion(doc));});}else{preparedDoc=model.deepCopy(newDoc);if(preparedDoc.id===undefined){preparedDoc.id=this.createNewId();}let now=new Date();if(this.timestampData&&preparedDoc.created===undefined){preparedDoc.created=now;}if(this.timestampData&&preparedDoc.updated===undefined){preparedDoc.updated=now;}model.checkObject(preparedDoc);}return preparedDoc;};Datastore.prototype._insertInCache=function(preparedDoc){if(util.isArray(preparedDoc)){this._insertMultipleDocsInCache(preparedDoc);}else{this.addToIndexes(preparedDoc);}};Datastore.prototype._insertMultipleDocsInCache=function(preparedDocs){let i,failingI,error;for(i=0;i<preparedDocs.length;i+=1){try{this.addToIndexes(preparedDocs[i]);}catch(e){error=e;failingI=i;break;}}if(error){for(i=0;i<failingI;i+=1){this.removeFromIndexes(preparedDocs[i]);}throw error;}};Datastore.prototype.insert=function(){this.executor.push({this:this,fn:this._insert,arguments:arguments});};Datastore.prototype.count=function(query={},callback){let cursor=new Cursor(this,query,function(err,docs,callback){if(err){return callback(err);}return callback(null,docs.length);});if(typeof callback==='function'){cursor.exec(callback);}else{return cursor;}};Datastore.prototype.find=function(query={},projection,callback){switch(arguments.length){case 1:projection={};break;case 2:if(typeof projection==='function'){callback=projection;projection={};}break;}let cursor=new Cursor(this,query,function(err,docs,callback){let res=[],i;if(err){return callback(err);}for(i=0;i<docs.length;i+=1){res.push(model.deepCopy(docs[i]));}return callback(null,res);});cursor.projection(projection);if(typeof callback==='function'){cursor.exec(callback);}else{return cursor;}};Datastore.prototype.findOne=function(query={},projection,callback){switch(arguments.length){case 0:case 1:projection={};break;case 2:if(typeof projection==='function'){callback=projection;projection={};}break;}let cursor=new Cursor(this,query,function(err,docs,callback){if(err){return callback(err);}if(docs.length===1){return callback(null,model.deepCopy(docs[0]));}else{return callback(null,null);}});cursor.projection(projection).limit(1);if(typeof callback==='function'){cursor.exec(callback);}else{return cursor;}};Datastore.prototype._update=function(query,updateQuery,options,cb){let callback,self=this,numReplaced=0,multi,upsert,i;if(typeof options==='function'){cb=options;options={};}callback=cb||function(){};multi=options.multi!==undefined?options.multi:false;upsert=options.upsert!==undefined?options.upsert:false;asyncWaterfall([function(cb){if(!upsert){return cb();}let cursor=new Cursor(self,query);cursor.limit(1)._exec(function(err,docs){if(err){return callback(err);}if(docs.length===1){return cb();}else{let toBeInserted;try{model.checkObject(updateQuery);toBeInserted=updateQuery;}catch(e){try{toBeInserted=model.modify(model.deepCopy(query,true),updateQuery);}catch(err){return callback(err);}}return self._insert(toBeInserted,function(err,newDoc){if(err){return callback(err);}return callback(null,1,newDoc,true);});}});},function(){let modifiedDoc,modifications=[],created;self.getCandidates(query,function(err,candidates){if(err){return callback(err);}try{for(i=0;i<candidates.length;i+=1){if(model.match(candidates[i],query)&&(multi||numReplaced===0)){numReplaced+=1;if(self.timestampData){created=candidates[i].created;}modifiedDoc=model.modify(candidates[i],updateQuery);if(self.timestampData){modifiedDoc.created=created;modifiedDoc.updated=new Date();}modifications.push({oldDoc:candidates[i],newDoc:modifiedDoc});}}}catch(err){return callback(err);}try{self.updateIndexes(modifications);}catch(err){return callback(err);}let updatedDocs=_.pluck(modifications,'newDoc');self.persistence.persistNewState(updatedDocs,function(err){if(err){return callback(err);}if(!options.returnUpdatedDocs){return callback(null,numReplaced);}else{let updatedDocsDC=[];(0,_forEach.default)(updatedDocs).call(updatedDocs,function(doc){updatedDocsDC.push(model.deepCopy(doc));});if(!multi){updatedDocsDC=updatedDocsDC[0];}return callback(null,numReplaced,updatedDocsDC);}});});}]);};Datastore.prototype.update=function(){this.executor.push({this:this,fn:this._update,arguments:arguments});};Datastore.prototype._remove=function(query,options,cb){let callback,self=this,numRemoved=0,removedDocs=[],multi;if(typeof options==='function'){cb=options;options={};}callback=cb||function(){};multi=options.multi!==undefined?options.multi:false;this.getCandidates(query,true,function(err,candidates){if(err){return callback(err);}try{(0,_forEach.default)(candidates).call(candidates,function(d){if(model.match(d,query)&&(multi||numRemoved===0)){numRemoved+=1;removedDocs.push({$$deleted:true,id:d.id});self.removeFromIndexes(d);}});}catch(err){return callback(err);}self.persistence.persistNewState(removedDocs,function(err){if(err){return callback(err);}return callback(null,numRemoved);});});};Datastore.prototype.remove=function(){this.executor.push({this:this,fn:this._remove,arguments:arguments});};module.exports=Datastore;