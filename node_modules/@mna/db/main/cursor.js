"use strict";var _interopRequireDefault=require("@babel/runtime-corejs3/helpers/interopRequireDefault");var _slice=_interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/slice"));var _sort=_interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/sort"));var _forEach=_interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/for-each"));var _keys=_interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/object/keys"));let model=require("./model"),_=require('underscore');function Cursor(db,query,execFn){this.db=db;this.query=query||{};if(execFn){this.execFn=execFn;}}Cursor.prototype.limit=function(limit){this._limit=limit;return this;};Cursor.prototype.skip=function(skip){this._skip=skip;return this;};Cursor.prototype.sort=function(sortQuery){this._sort=sortQuery;return this;};Cursor.prototype.projection=function(projection){this._projection=projection;return this;};Cursor.prototype.project=function(candidates){let res=[],self=this,keepId,action,keys;if(this._projection===undefined||(0,_keys.default)(this._projection).length===0){return candidates;}keepId=this._projection.id===0?false:true;this._projection=_.omit(this._projection,'id');keys=(0,_keys.default)(this._projection);(0,_forEach.default)(keys).call(keys,function(k){if(action!==undefined&&self._projection[k]!==action){throw new Error("Can't both keep and omit fields except for id");}action=self._projection[k];});(0,_forEach.default)(candidates).call(candidates,function(candidate){let toPush;if(action===1){toPush={$set:{}};(0,_forEach.default)(keys).call(keys,function(k){toPush.$set[k]=model.getDotValue(candidate,k);if(toPush.$set[k]===undefined){delete toPush.$set[k];}});toPush=model.modify({},toPush);}else{toPush={$unset:{}};(0,_forEach.default)(keys).call(keys,function(k){toPush.$unset[k]=true;});toPush=model.modify(candidate,toPush);}if(keepId){toPush.id=candidate.id;}else{delete toPush.id;}res.push(toPush);});return res;};Cursor.prototype._exec=function(_callback){let res=[],added=0,skipped=0,self=this,error=null,i,keys,key;function callback(error,res){if(self.execFn){return self.execFn(error,res,_callback);}else{return _callback(error,res);}}this.db.getCandidates(this.query,function(err,candidates){if(err){return callback(err);}try{for(i=0;i<candidates.length;i+=1){if(model.match(candidates[i],self.query)){if(!self._sort){if(self._skip&&self._skip>skipped){skipped+=1;}else{res.push(candidates[i]);added+=1;if(self._limit&&self._limit<=added){break;}}}else{res.push(candidates[i]);}}}}catch(err){return callback(err);}if(self._sort){keys=(0,_keys.default)(self._sort);let criteria=[];for(i=0;i<keys.length;i++){key=keys[i];criteria.push({key:key,direction:self._sort[key]});}(0,_sort.default)(res).call(res,function(a,b){let criterion,compare,i;for(i=0;i<criteria.length;i++){criterion=criteria[i];compare=criterion.direction*model.compareThings(model.getDotValue(a,criterion.key),model.getDotValue(b,criterion.key),self.db.compareStrings);if(compare!==0){return compare;}}return 0;});let limit=self._limit||res.length,skip=self._skip||0;res=(0,_slice.default)(res).call(res,skip,skip+limit);}try{res=self.project(res);}catch(e){error=e;res=undefined;}return callback(error,res);});};Cursor.prototype.exec=function(){this.db.executor.push({this:this,fn:this._exec,arguments:arguments});};module.exports=Cursor;